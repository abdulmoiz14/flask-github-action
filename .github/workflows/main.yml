name: CI/CD pipeline
on:
  push:
    branches:
      - 'main'    
jobs:
  python_build:
    needs: lint_build
    runs-on: [self-hosted, Linux, X64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: build image
        run: docker build . --file dockerfile --tag web
      - name: run image
        run: docker run -d  --name web_container2 web sleep 100
        
  postgres_build:
    runs-on: [self-hosted, Linux, X64, arm64]
    needs: lint_build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql_version: 'alpine3.17'
        env:
          POSTGRES_PASSWORD : ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER : ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB : ${{ secrets.POSTGRES_DB }}
      - name: build image
        run: docker build . --file db/dockerfile --tag postgres_db
      - name: run image
        run: docker run -d -p 5432:5432 --name postgres_container2 postgres_db sleep 100
  lint_build:
    name: Lint Code Base 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
